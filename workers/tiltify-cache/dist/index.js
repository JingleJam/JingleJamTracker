(()=>{function F(e,t){return e.sort((a,s)=>{let i=a[t],o=s[t];return i<o?1:i>o?-1:0})}function u(e,t=2){return+(Math.round(+(e+"e+"+t))+("e-"+t))}var D="https://api.tiltify.com/",S={method:"POST",headers:{"content-type":"application/json"}};async function O(e,t){let a={body:JSON.stringify({operationName:"get_campaign_by_vanity_and_slug",variables:{vanity:"@"+e,slug:t},query:"query get_campaign_by_vanity_and_slug($vanity: String!, $slug: String!) { campaign(vanity: $vanity, slug: $slug) { publicId legacyCampaignId name slug status originalGoal { value } region { name } totalAmountRaised { value } goal { value } user { id username slug totalAmountRaised { value } } cause { id name slug } fundraisingEvent { publicId legacyFundraisingEventId name slug } livestream { channel type } rewards { quantity remaining amount { value } quantity remaining } } }"}),...S};return(await(await fetch(D,a)).json())?.data?.campaign||null}async function L(e,t){let a={body:JSON.stringify({operationName:"get_cause_and_fe_by_slug",variables:{causeSlug:e,feSlug:t},query:"query get_cause_and_fe_by_slug($feSlug: String!, $causeSlug: String!) { fundraisingEvent(slug: $feSlug, causeSlug: $causeSlug) { amountRaised { currency value } rewards { quantity remaining } totalAmountRaised { value } } }"}),...S};return(await(await fetch(D,a)).json())?.data?.fundraisingEvent||null}async function b(e,t){let a={body:JSON.stringify({operationName:"get_campaigns_by_fundraising_event_id",variables:{limit:20,offset:t,query:null,regionId:null,publicId:e},query:"query get_campaigns_by_fundraising_event_id($publicId: String!, $limit: Int!, $query: String, $offset: Int, $regionId: Int) { fundraisingEvent(publicId: $publicId) { publishedCampaigns( limit: $limit offset: $offset query: $query regionId: $regionId ) { pagination { hasNextPage limit offset total } edges { node {... on Campaign { publishedAt description name slug user { avatar { src } id username slug social { twitch } } region { id } totalAmountRaised { value } livestream { channel type } goal { value } } } } } } }"}),...S};return(await(await fetch(D,a)).json())?.data?.fundraisingEvent||null}async function P(){return await(await fetch("https://jinglejam.yogscast.com/api/total")).json()}var U=6,J=100,$=1024,V=20*900-2,K=566;async function k(e){let t=w(e),a=[];try{let s=JSON.parse(await e.JINGLE_JAM_DATA.get("causes")||"")||[],i=JSON.parse(await e.JINGLE_JAM_DATA.get("summary")||"")||[];t=w(e,s,i,e.CONVERSION_RATE);let o=[O(e.YOGSCAST_USERNAME_SLUG,e.YOGSCAST_CAMPAIGN_SLUG),L(e.CAUSE_SLUG,e.FUNDRAISER_SLUG),P()],r=await Promise.all(o),f=r[0],E=r[1],H=r[2],v=parseFloat(E?.totalAmountRaised.value||"0"),h=parseFloat(f?.totalAmountRaised.value||"0"),x=u(parseFloat(f?.user.totalAmountRaised.value||"0")-e.DOLLAR_OFFSET),M=u(v-h);t.raised.yogscast=h,t.raised.fundraisers=M,t.avgConversionRate=e.CONVERSION_RATE;let A=x/h;!isNaN(A)&&isFinite(A)&&(t.avgConversionRate=u(A,10));try{let n=(E?.rewards?.length||0)>0?E?.rewards:f?.rewards;n&&n.length>0&&(t.collections.total=n[0].quantity,t.collections.redeemed=t.collections.total-n[0].remaining)}catch{t.collections.total=e.COLLECTIONS_AVAILABLE,t.collections.redeemed=0}t.donations.count=H?.donations||t.collections.redeemed||0;let y=[],R=0,N=!1;if(e.FUNDRAISER_PUBLIC_ID){for(;R<=V&&!N;){let l=Array.from({length:U},()=>b(e.FUNDRAISER_PUBLIC_ID,R));R+=20*U;let g=await Promise.all(l);for(let _ of g){let p=_.publishedCampaigns;if(y=y.concat(p.edges),!p.pagination.hasNextPage){N=!0;break}}}let n=0;for(let l of y){let g=l.node.region?.id||0,_=l.node.user?.slug===e.YOGSCAST_USERNAME_SLUG,p=!g||g===K,m=parseFloat(l.node.totalAmountRaised?.value||"0");n+=m,p&&(m/=t.causes.length),m=u(m);for(let T of t.causes)(T.id===g||p)&&(_?T.raised.yogscast+=m:T.raised.fundraisers+=m)}let d=v-n;if(d>0){t.raised.yogscast+=d,t.raised.fundraisers-=d,t.raised.yogscast=u(t.raised.yogscast),t.raised.fundraisers=u(t.raised.fundraisers);let l=d/t.causes.length;for(let g of t.causes)g.raised.yogscast+=l}for(let l of t.causes)l.raised.fundraisers=u(l.raised.fundraisers),l.raised.yogscast=u(l.raised.yogscast)}for(let n of y){let d=n.node.description?.length>$?`${n.node.description.slice(0,$)}...`:n.node.description;a.push({causeId:n.node.region?.id||null,name:n.node.name,description:d,slug:n.node.slug,url:`https://tiltify.com/@${n.node.user?.slug}/${n.node.slug}`,startTime:n.node.publishedAt,raised:u(parseFloat(n.node.totalAmountRaised?.value)||0),goal:u(parseFloat(n.node.goal?.value)||0),livestream:{channel:n.node.livestream?.channel||n.node.user?.social.twitch,type:n.node.livestream?.type||"twitch"},user:{id:n.node.user?.id,name:n.node.user?.username,slug:n.node.user?.slug,avatar:n.node.user?.avatar.src,url:`https://tiltify.com/@${n.node.user?.slug}`}})}t.campaigns.count=a.length,t.campaigns.list=F(a,"raised").slice(0,J)}catch(s){console.error(s)}return t}function w(e,t=[],a=[],s=1,i=new Date){let o=t?.map(r=>({id:r.id,name:r.name,logo:r.logo,description:r.description,url:r.url,donateUrl:r.donateUrl,raised:{yogscast:0,fundraisers:0}}));return{date:i,event:{year:e.YEAR,start:new Date(Date.UTC(e.YEAR,11,1,17,0,0)),end:new Date(Date.UTC(e.YEAR,11,15,0,0,0))},avgConversionRate:s,raised:{yogscast:0,fundraisers:0},collections:{redeemed:0,total:e.COLLECTIONS_AVAILABLE},donations:{count:0},history:a||[],causes:o,campaigns:{count:0,list:[]}}}var G=new Date(2023,9,17,20,20,10),Q=new Date(2023,10,13,22,10,0);async function z(e){let t=JSON.parse(await e.JINGLE_JAM_DATA.get("causes")||"")||[],a=e.CONVERSION_RATE,s=JSON.parse(await e.JINGLE_JAM_DATA.get("summary")||"")||[],i=w(e,t,s,a);i.event.start=G,i.event.end=Q;let o=1*Math.max((new Date().getTime()-G.getTime())/3.5913%5e6,0);i.raised.yogscast=o*.8,i.raised.fundraisers=o*.2,i.collections.redeemed=parseInt((o/40.84).toFixed(0)),i.donations.count=i.collections.redeemed+945;for(let r of i.causes)r.raised.yogscast=o/i.causes.length*.8,r.raised.fundraisers=o/i.causes.length*.2;return i}async function I(e){return e.DONATION_DIFFERENCE=parseInt(e.DONATION_DIFFERENCE.toString()),e.DOLLAR_OFFSET=parseFloat(e.DOLLAR_OFFSET.toString()),e.COLLECTIONS_AVAILABLE=parseInt(e.COLLECTIONS_AVAILABLE.toString()),e.YEAR=parseInt(e.YEAR.toString()),e.CONVERSION_RATE=parseFloat(e.CONVERSION_RATE.toString()),e.ENABLE_DEBUG?await z(e):await k(e)}var Y=60*1e3,W=10,c="tiltify-cache",X="tiltify-cache-2023",C="/api/tiltify",j="/api/graph/current",q=class{constructor(t,a){this.state=t,this.storage=t.storage,this.env=a}async fetch(t){let a=new URL(t.url);if(console.log("Called "+a.pathname),t.method==="GET"&&a.pathname===C){let s=await this.state.storage.get(c);return await this.storage.getAlarm()==null&&this.env.ENABLE_REFRESH&&this.storage.setAlarm(Date.now()+this.env.REFRESH_TIME*1e3),s||(s=await I(this.env),this.env.ENABLE_REFRESH&&await this.state.storage.put(c,s)),new Response(JSON.stringify(s))}else if(t.method==="POST"&&a.pathname===C){let s=await t.json();return await this.state.storage.put(c,s),new Response("Manual Update Success",{status:200})}return new Response("Not found",{status:404})}async alarm(){this.env.ENABLE_REFRESH&&this.storage.setAlarm(Date.now()+this.env.REFRESH_TIME*1e3),console.log("Alarm Called, fetching latest Tiltify data...");let t=new Date,a=await I(this.env),s=new Date;console.log(`Finished Fetching, caching result Tiltify data... (${s.getTime()-t.getTime()}ms)`),await this.state.storage.put(c,a),console.log(`Finished Caching data... (${new Date().getTime()-s.getTime()}ms)`)}},B=class{constructor(t,a){this.state=t,this.storage=t.storage,this.env=a}async fetch(t){let a=new URL(t.url);if(console.log("Called "+a.pathname),t.method==="GET"&&a.pathname===j){let s=await this.state.storage.get(c)||null;return s||(s=await this.defaultObject(),await this.state.storage.put(c,s)),await this.storage.getAlarm()==null&&this.env.ENABLE_GRAPH_REFRESH&&this.storage.setAlarm(Date.now()+Y),new Response(JSON.stringify(s))}else if(t.method==="POST"&&a.pathname===j){let s=await t.json();return await this.state.storage.put(c,s),new Response("Manual Update Success",{status:200})}return new Response("Not found",{status:404})}async alarm(){this.env.ENABLE_GRAPH_REFRESH&&this.storage.setAlarm(Date.now()+Y),console.log("Alarm Called, fetching latest graph data...");let t=new Date,a=await this.getLatestGraphData();console.log(`Finished Fetching, caching result graph data... (${new Date().getTime()-t.getTime()}ms)`),a!==null&&await this.state.storage.put(c,a)}async getLatestGraphData(){let t=await this.getLatestData();if(!t||new Date(t.date).getMinutes()%W!==0)return null;let a=new Date(t.date),s=new Date(t.event.start),i=new Date(t.event.end);if(a<s||a>i)return null;let o=[];try{o=await this.state.storage.get(c)||[]}catch{}o.length===0&&(o=await this.defaultObject(t));let r=u(t.raised.yogscast+t.raised.fundraisers);return o.push({date:a.getTime(),p:r,d:u(r*t.avgConversionRate)}),o}async defaultObject(t){return t||(t=await this.getLatestData()),t?[{date:new Date(t.event.start).getTime(),p:0,d:0}]:[{date:Date.now(),p:0,d:0}]}async getLatestData(){let t=this.env.TILTIFY_DATA.idFromName(X);return await(await this.env.TILTIFY_DATA.get(t).fetch("http://127.0.0.1"+C)).json()}},ot={};})();
//# sourceMappingURL=index.js.map
